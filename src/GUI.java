/*
 * Kieran Bates
 * January 7, 2020
 * This program converts decimal numbers to other number systems and back
 */

/**
 *
 * @author kibat6204
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        decimalInput = new javax.swing.JTextField();
        decToBin = new javax.swing.JButton();
        binaryOut = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        binaryInput = new javax.swing.JTextField();
        binToDec = new javax.swing.JButton();
        decimalOut = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hexInput = new javax.swing.JTextField();
        hexToBin = new javax.swing.JButton();
        decimalOut1 = new javax.swing.JLabel();
        hexOut = new javax.swing.JLabel();
        binToHex = new javax.swing.JButton();
        decimalInput1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jLabel1.setText("Decimal to Binary");

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel2.setText("Number System Converter");

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel3.setText("Enter a decimal number");

        decimalInput.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        decimalInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        decToBin.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        decToBin.setText("Dec. to Bin.");
        decToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decToBinActionPerformed(evt);
            }
        });

        binaryOut.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        binaryOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        binaryOut.setText("---");

        jLabel5.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel5.setText("Enter a binary number");

        binaryInput.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        binaryInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        binToDec.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        binToDec.setText("Bin. to Dec.");
        binToDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binToDecActionPerformed(evt);
            }
        });

        decimalOut.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        decimalOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        decimalOut.setText("---");

        jLabel4.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel4.setText("Enter a hex number");

        hexInput.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        hexInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        hexToBin.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        hexToBin.setText("Hex. to Dec.");
        hexToBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexToBinActionPerformed(evt);
            }
        });

        decimalOut1.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        decimalOut1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        decimalOut1.setText("---");

        hexOut.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        hexOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hexOut.setText("---");

        binToHex.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        binToHex.setText("Dec. to Hex.");
        binToHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binToHexActionPerformed(evt);
            }
        });

        decimalInput1.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        decimalInput1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel6.setText("Enter a decimal number");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel2)
                .addGap(32, 32, 32))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(decimalInput1)
                            .addComponent(hexInput, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(binaryInput, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                    .addComponent(decimalInput))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(hexToBin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(decimalOut1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(binToHex)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hexOut))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(binToDec)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(decimalOut))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(decToBin)
                                        .addGap(49, 49, 49)
                                        .addComponent(binaryOut)))
                                .addGap(50, 50, 50))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(decimalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decToBin)
                    .addComponent(binaryOut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(binaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(binToDec)
                    .addComponent(decimalOut))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hexInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hexToBin)
                    .addComponent(decimalOut1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(decimalInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(binToHex)
                    .addComponent(hexOut))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decToBinActionPerformed
        
        int lastNumber; //sets a variable for the last number that was divided
        String binaryOutput = ""; //Sets a string for an individual binary digit
        String binaryOutputFinal = ""; //Sets a string for the final binary number
        
        lastNumber = Integer.parseInt(decimalInput.getText()); //store th user input in a variable
        
        while(lastNumber >= 1) //open loop for conversion algorithm
        {
             if(lastNumber%2 > 0) //modulus divide by two
             {
                 binaryOutput += ("1"); //store number in temporary string
             }
             else
             {
                 binaryOutput += ("0");
             }
             
             lastNumber = lastNumber/2;
        }
        //binaryOut.setText(binaryOutput);
        
        int charPosition = binaryOutput.length()-1;
        for(int i = 0; i<=binaryOutput.length()-1; i++)
        {
            binaryOutputFinal += binaryOutput.charAt(charPosition);
            charPosition = charPosition-1;
        }
        
        binaryOut.setText(binaryOutputFinal);
        
    }//GEN-LAST:event_decToBinActionPerformed

    private void binToDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binToDecActionPerformed
        
        String userInput = binaryInput.getText();
        int inputLength = userInput.length()-1;
        String output = "";
        
        int value1 = 1;
        int value2 = 0;
        for(int i = userInput.length()-1; i>=0; i--)
        {
            if(String.valueOf(userInput.charAt(i)).equals("1"))
            {
                value2 = value2+value1;
                value1 = value1*2;
            }
            if(String.valueOf(userInput.charAt(i)).equals("0"))
            {
                value1 = value1*2;
            }
        }
        decimalOut.setText(String.valueOf(value2));
    }//GEN-LAST:event_binToDecActionPerformed

    private void hexToBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexToBinActionPerformed
        
        String userInput = hexInput.getText();
        
        double pow = 0;
        double value = 0;
        double value2 = 0;
        for(int i = userInput.length()-1; i>=0; i--)
        {
            if(userInput.charAt(i) == 'A')
            {
                value2 = 10;
            }
            else if(userInput.charAt(i) == 'B')
            {
                value2 = 11;
            }
            else if(userInput.charAt(i) == 'C')
            {
                value2 = 12;
            }
            else if(userInput.charAt(i) == 'D')
            {
                value2 = 13;
            }
            else if(userInput.charAt(i) == 'E')
            {
                value2 = 14;
            }
            else if(userInput.charAt(i) == 'F')
            {
                value2 = 15;
            }
            else
            {
                value2 = Double.parseDouble(String.valueOf(userInput.charAt(i)));
            }
            value = value+(value2*(Math.pow(16, pow)));
            pow = pow+1;
        }
        decimalOut1.setText(String.valueOf(value));
    }//GEN-LAST:event_hexToBinActionPerformed

    private void binToHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binToHexActionPerformed
        
        int lastNumber;
        String hexOutput = "";
        String hexOutputFinal = "";
        
        lastNumber = Integer.parseInt(decimalInput1.getText());
        
        while(lastNumber >= 1)
        {
             if(lastNumber%16 == 10)
             {
                 hexOutput += ("A");
             }
             else if(lastNumber%16 == 11)
             {
                 hexOutput += ("B");
             }
             else if(lastNumber%16 == 12)
             {
                 hexOutput += ("C");
             }
             else if(lastNumber%16 == 13)
             {
                 hexOutput += ("D");
             }
             else if(lastNumber%16 == 14)
             {
                 hexOutput += ("E");
             }
             else if(lastNumber%16 == 15)
             {
                 hexOutput += ("F");
             }
             else
             {
                 hexOutput += (String.valueOf(lastNumber%16));
             }
             
             lastNumber = lastNumber/16;
        }
        //binaryOut.setText(binaryOutput);
        
        int charPosition = hexOutput.length()-1;
        for(int i = 0; i<=hexOutput.length()-1; i++)
        {
            hexOutputFinal += hexOutput.charAt(charPosition);
            charPosition = charPosition-1;
        }
        
        hexOut.setText(hexOutputFinal);
        
    }//GEN-LAST:event_binToHexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton binToDec;
    private javax.swing.JButton binToHex;
    private javax.swing.JTextField binaryInput;
    private javax.swing.JLabel binaryOut;
    private javax.swing.JButton decToBin;
    private javax.swing.JTextField decimalInput;
    private javax.swing.JTextField decimalInput1;
    private javax.swing.JLabel decimalOut;
    private javax.swing.JLabel decimalOut1;
    private javax.swing.JTextField hexInput;
    private javax.swing.JLabel hexOut;
    private javax.swing.JButton hexToBin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
